{"componentChunkName":"component---src-templates-post-jsx","path":"/spring-custom-annotation/","result":{"data":{"site":{"siteMetadata":{"title":"RUN:DEVEL:RUN"}},"markdownRemark":{"id":"4c6337d3-927c-5ba5-a254-3aa7da1b7bf9","excerpt":"☀️ 테스트 환경 OpenJDK 17.0.2 Gradle 8.0.2 Spring Boot 3.0.5 ✋ 들어가며 @Scheduled Annotation으로 정해진 시간에 수행되는 메소드를 구현했다.\n해당 Annotation을 사용하는 메소드 내에서 정상 여부의 로그를 남기기 위해서는 똑같은 소스를 매번 작성해야하는 문제가 발생했다. 그리하여 @Schedul…","html":"<h2 id=\"️-테스트-환경\" style=\"position:relative;\"><a href=\"#%EF%B8%8F-%ED%85%8C%EC%8A%A4%ED%8A%B8-%ED%99%98%EA%B2%BD\" aria-label=\"️ 테스트 환경 permalink\" class=\"heading-anchor before\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"15\" height=\"15\" viewBox=\"0 0 24 24\"><path d=\"M6.188 8.719c.439-.439.926-.801 1.444-1.087 2.887-1.591 6.589-.745 8.445 2.069l-2.246 2.245c-.644-1.469-2.243-2.305-3.834-1.949-.599.134-1.168.433-1.633.898l-4.304 4.306c-1.307 1.307-1.307 3.433 0 4.74 1.307 1.307 3.433 1.307 4.74 0l1.327-1.327c1.207.479 2.501.67 3.779.575l-2.929 2.929c-2.511 2.511-6.582 2.511-9.093 0s-2.511-6.582 0-9.093l4.304-4.306zm6.836-6.836l-2.929 2.929c1.277-.096 2.572.096 3.779.574l1.326-1.326c1.307-1.307 3.433-1.307 4.74 0 1.307 1.307 1.307 3.433 0 4.74l-4.305 4.305c-1.311 1.311-3.44 1.3-4.74 0-.303-.303-.564-.68-.727-1.051l-2.246 2.245c.236.358.481.667.796.982.812.812 1.846 1.417 3.036 1.704 1.542.371 3.194.166 4.613-.617.518-.286 1.005-.648 1.444-1.087l4.304-4.305c2.512-2.511 2.512-6.582.001-9.093-2.511-2.51-6.581-2.51-9.092 0z\"/></svg></a>☀️ 테스트 환경</h2>\n<blockquote>\n<ul>\n<li>OpenJDK 17.0.2</li>\n<li>Gradle 8.0.2</li>\n<li>Spring Boot 3.0.5</li>\n</ul>\n</blockquote>\n<h2 id=\"-들어가며\" style=\"position:relative;\"><a href=\"#-%EB%93%A4%EC%96%B4%EA%B0%80%EB%A9%B0\" aria-label=\" 들어가며 permalink\" class=\"heading-anchor before\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"15\" height=\"15\" viewBox=\"0 0 24 24\"><path d=\"M6.188 8.719c.439-.439.926-.801 1.444-1.087 2.887-1.591 6.589-.745 8.445 2.069l-2.246 2.245c-.644-1.469-2.243-2.305-3.834-1.949-.599.134-1.168.433-1.633.898l-4.304 4.306c-1.307 1.307-1.307 3.433 0 4.74 1.307 1.307 3.433 1.307 4.74 0l1.327-1.327c1.207.479 2.501.67 3.779.575l-2.929 2.929c-2.511 2.511-6.582 2.511-9.093 0s-2.511-6.582 0-9.093l4.304-4.306zm6.836-6.836l-2.929 2.929c1.277-.096 2.572.096 3.779.574l1.326-1.326c1.307-1.307 3.433-1.307 4.74 0 1.307 1.307 1.307 3.433 0 4.74l-4.305 4.305c-1.311 1.311-3.44 1.3-4.74 0-.303-.303-.564-.68-.727-1.051l-2.246 2.245c.236.358.481.667.796.982.812.812 1.846 1.417 3.036 1.704 1.542.371 3.194.166 4.613-.617.518-.286 1.005-.648 1.444-1.087l4.304-4.305c2.512-2.511 2.512-6.582.001-9.093-2.511-2.51-6.581-2.51-9.092 0z\"/></svg></a>✋ 들어가며</h2>\n<p><em>@Scheduled</em> Annotation으로 정해진 시간에 수행되는 메소드를 구현했다.\n해당 Annotation을 사용하는 메소드 내에서 정상 여부의 로그를 남기기 위해서는 똑같은 소스를 매번 작성해야하는 문제가 발생했다.</p>\n<p>그리하여 <em>@Scheduled</em> Annotation을 커스텀하고 AOP를 활용하여 해당 Annotation을 사용할때 로그를 남기도록 구현해보고자한다.</p>\n<h4 id=\"문제의-소스\" style=\"position:relative;\"><a href=\"#%EB%AC%B8%EC%A0%9C%EC%9D%98-%EC%86%8C%EC%8A%A4\" aria-label=\"문제의 소스 permalink\" class=\"heading-anchor before\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"15\" height=\"15\" viewBox=\"0 0 24 24\"><path d=\"M6.188 8.719c.439-.439.926-.801 1.444-1.087 2.887-1.591 6.589-.745 8.445 2.069l-2.246 2.245c-.644-1.469-2.243-2.305-3.834-1.949-.599.134-1.168.433-1.633.898l-4.304 4.306c-1.307 1.307-1.307 3.433 0 4.74 1.307 1.307 3.433 1.307 4.74 0l1.327-1.327c1.207.479 2.501.67 3.779.575l-2.929 2.929c-2.511 2.511-6.582 2.511-9.093 0s-2.511-6.582 0-9.093l4.304-4.306zm6.836-6.836l-2.929 2.929c1.277-.096 2.572.096 3.779.574l1.326-1.326c1.307-1.307 3.433-1.307 4.74 0 1.307 1.307 1.307 3.433 0 4.74l-4.305 4.305c-1.311 1.311-3.44 1.3-4.74 0-.303-.303-.564-.68-.727-1.051l-2.246 2.245c.236.358.481.667.796.982.812.812 1.846 1.417 3.036 1.704 1.542.371 3.194.166 4.613-.617.518-.286 1.005-.648 1.444-1.087l4.304-4.305c2.512-2.511 2.512-6.582.001-9.093-2.511-2.51-6.581-2.51-9.092 0z\"/></svg></a><strong><em>문제의 소스</em></strong></h4>\n<blockquote>\n<p>⚠️ <strong><em>로그를 남기기 위해서 매번 같은 소스가 작성되어 있다.</em></strong></p>\n<ul>\n<li>logService.insertLog(result);</li>\n</ul>\n</blockquote>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token annotation punctuation\">@Component</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">ScheduledComponent</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token annotation punctuation\">@Scheduled</span><span class=\"token punctuation\">(</span>cron<span class=\"token operator\">=</span> <span class=\"token string\">\"0 0 0 * * *\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">public</span> <span class=\"token class-name\">Map</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">Object</span><span class=\"token punctuation\">></span></span> <span class=\"token function\">scheduled1</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\n        <span class=\"token comment\">// 로그 저장</span>\n        logService<span class=\"token punctuation\">.</span><span class=\"token function\">insertLog</span><span class=\"token punctuation\">(</span>result<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\n        <span class=\"token keyword\">return</span> result<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token annotation punctuation\">@Scheduled</span><span class=\"token punctuation\">(</span>cron<span class=\"token operator\">=</span> <span class=\"token string\">\"0 0 1 * * *\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">int</span> <span class=\"token function\">scheduled2</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\n        <span class=\"token comment\">// 로그 저장</span>\n        logService<span class=\"token punctuation\">.</span><span class=\"token function\">insertLog</span><span class=\"token punctuation\">(</span>result<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\n        <span class=\"token keyword\">return</span> result<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h2 id=\"-AOP를-통한-Custom-Annotation-처리\" style=\"position:relative;\"><a href=\"#-AOP%EB%A5%BC-%ED%86%B5%ED%95%9C-Custom-Annotation-%EC%B2%98%EB%A6%AC\" aria-label=\" AOP를 통한 Custom Annotation 처리 permalink\" class=\"heading-anchor before\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"15\" height=\"15\" viewBox=\"0 0 24 24\"><path d=\"M6.188 8.719c.439-.439.926-.801 1.444-1.087 2.887-1.591 6.589-.745 8.445 2.069l-2.246 2.245c-.644-1.469-2.243-2.305-3.834-1.949-.599.134-1.168.433-1.633.898l-4.304 4.306c-1.307 1.307-1.307 3.433 0 4.74 1.307 1.307 3.433 1.307 4.74 0l1.327-1.327c1.207.479 2.501.67 3.779.575l-2.929 2.929c-2.511 2.511-6.582 2.511-9.093 0s-2.511-6.582 0-9.093l4.304-4.306zm6.836-6.836l-2.929 2.929c1.277-.096 2.572.096 3.779.574l1.326-1.326c1.307-1.307 3.433-1.307 4.74 0 1.307 1.307 1.307 3.433 0 4.74l-4.305 4.305c-1.311 1.311-3.44 1.3-4.74 0-.303-.303-.564-.68-.727-1.051l-2.246 2.245c.236.358.481.667.796.982.812.812 1.846 1.417 3.036 1.704 1.542.371 3.194.166 4.613-.617.518-.286 1.005-.648 1.444-1.087l4.304-4.305c2.512-2.511 2.512-6.582.001-9.093-2.511-2.51-6.581-2.51-9.092 0z\"/></svg></a>🧰 AOP를 통한 Custom Annotation 처리</h2>\n<h4 id=\"CustomScheduledjava\" style=\"position:relative;\"><a href=\"#CustomScheduledjava\" aria-label=\"CustomScheduledjava permalink\" class=\"heading-anchor before\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"15\" height=\"15\" viewBox=\"0 0 24 24\"><path d=\"M6.188 8.719c.439-.439.926-.801 1.444-1.087 2.887-1.591 6.589-.745 8.445 2.069l-2.246 2.245c-.644-1.469-2.243-2.305-3.834-1.949-.599.134-1.168.433-1.633.898l-4.304 4.306c-1.307 1.307-1.307 3.433 0 4.74 1.307 1.307 3.433 1.307 4.74 0l1.327-1.327c1.207.479 2.501.67 3.779.575l-2.929 2.929c-2.511 2.511-6.582 2.511-9.093 0s-2.511-6.582 0-9.093l4.304-4.306zm6.836-6.836l-2.929 2.929c1.277-.096 2.572.096 3.779.574l1.326-1.326c1.307-1.307 3.433-1.307 4.74 0 1.307 1.307 1.307 3.433 0 4.74l-4.305 4.305c-1.311 1.311-3.44 1.3-4.74 0-.303-.303-.564-.68-.727-1.051l-2.246 2.245c.236.358.481.667.796.982.812.812 1.846 1.417 3.036 1.704 1.542.371 3.194.166 4.613-.617.518-.286 1.005-.648 1.444-1.087l4.304-4.305c2.512-2.511 2.512-6.582.001-9.093-2.511-2.51-6.581-2.51-9.092 0z\"/></svg></a><strong><em>CustomScheduled.java</em></strong></h4>\n<ol>\n<li>\n<p>@Target : Annotation이 적용될 위치</p>\n<ul>\n<li>@CustomScheduled를 메소드에 적용하기 위해서 <code class=\"language-text\">ElementType.METHOD</code> 사용</li>\n</ul>\n</li>\n<li>\n<p>@Retention : Annotation이 적용될 범위</p>\n<ul>\n<li>런타임까지 유지되는 Annotation을 정의하기 위해서 <code class=\"language-text\">RetentionPolicy.RUNTIME</code> 사용 </li>\n</ul>\n</li>\n<li>\n<p>@Scheduled : Scheduled Annotation과 같은 동작을 위해서 사용</p>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token annotation punctuation\">@Target</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">ElementType</span><span class=\"token punctuation\">.</span><span class=\"token constant\">METHOD</span><span class=\"token punctuation\">)</span>\n<span class=\"token annotation punctuation\">@Retention</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">RetentionPolicy</span><span class=\"token punctuation\">.</span><span class=\"token constant\">RUNTIME</span><span class=\"token punctuation\">)</span>\n<span class=\"token annotation punctuation\">@Scheduled</span>\n<span class=\"token keyword\">public</span> <span class=\"token annotation punctuation\">@interface</span> <span class=\"token class-name\">CustomScheduled</span> <span class=\"token punctuation\">{</span>\n<span class=\"token class-name\">String</span> <span class=\"token function\">cron</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">default</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n</li>\n</ol>\n<h4 id=\"CustomScheduledAspectjava\" style=\"position:relative;\"><a href=\"#CustomScheduledAspectjava\" aria-label=\"CustomScheduledAspectjava permalink\" class=\"heading-anchor before\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"15\" height=\"15\" viewBox=\"0 0 24 24\"><path d=\"M6.188 8.719c.439-.439.926-.801 1.444-1.087 2.887-1.591 6.589-.745 8.445 2.069l-2.246 2.245c-.644-1.469-2.243-2.305-3.834-1.949-.599.134-1.168.433-1.633.898l-4.304 4.306c-1.307 1.307-1.307 3.433 0 4.74 1.307 1.307 3.433 1.307 4.74 0l1.327-1.327c1.207.479 2.501.67 3.779.575l-2.929 2.929c-2.511 2.511-6.582 2.511-9.093 0s-2.511-6.582 0-9.093l4.304-4.306zm6.836-6.836l-2.929 2.929c1.277-.096 2.572.096 3.779.574l1.326-1.326c1.307-1.307 3.433-1.307 4.74 0 1.307 1.307 1.307 3.433 0 4.74l-4.305 4.305c-1.311 1.311-3.44 1.3-4.74 0-.303-.303-.564-.68-.727-1.051l-2.246 2.245c.236.358.481.667.796.982.812.812 1.846 1.417 3.036 1.704 1.542.371 3.194.166 4.613-.617.518-.286 1.005-.648 1.444-1.087l4.304-4.305c2.512-2.511 2.512-6.582.001-9.093-2.511-2.51-6.581-2.51-9.092 0z\"/></svg></a><strong><em>CustomScheduledAspect.java</em></strong></h4>\n<ol>\n<li>AOP가 구현된 클래스에는 <em>@Aspect</em> Annotation을 사용한다. </li>\n<li>\n<p>해당 클래스의 메소드에는 AOP를 적용할 패턴 혹은 관심사를 구현할 수 있다.</p>\n<ul>\n<li>@Before : 패턴이 실행되기 전에 동작</li>\n<li>@After : 패턴이 실행된 이후에 동작</li>\n<li>@Around : 패턴이 실행되기 전, 후 모두 동작 (실행결과 반환을 위해 반환 값은 Object)</li>\n</ul>\n</li>\n<li>\n<p>예제에서는 <em>@CustomScheduled</em>가 사용된 클래스명, 메소드명 그리고 결과를 로그 테이블에 저장하고 있다 </p>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token annotation punctuation\">@Aspect</span>\n<span class=\"token annotation punctuation\">@Component</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">CustomScheduledAspect</span> <span class=\"token punctuation\">{</span>\n\n<span class=\"token annotation punctuation\">@Around</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"@annotation(customScheduled)\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">public</span> <span class=\"token class-name\">Object</span> <span class=\"token function\">handleWsfScheduled</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">ProceedingJoinPoint</span> joinPoint<span class=\"token punctuation\">,</span> <span class=\"token class-name\">CustomScheduled</span> customScheduled<span class=\"token punctuation\">)</span> <span class=\"token keyword\">throws</span> <span class=\"token class-name\">Throwable</span> <span class=\"token punctuation\">{</span>\n\n    <span class=\"token class-name\">MethodSignature</span> signature <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">MethodSignature</span><span class=\"token punctuation\">)</span> joinPoint<span class=\"token punctuation\">.</span><span class=\"token function\">getSignature</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">// 실행</span>\n    <span class=\"token class-name\">Object</span> result <span class=\"token operator\">=</span> joinPoint<span class=\"token punctuation\">.</span><span class=\"token function\">proceed</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token class-name\">Map</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">Object</span><span class=\"token punctuation\">></span></span> logParam <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">HashMap</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">Object</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    logParam<span class=\"token punctuation\">.</span><span class=\"token function\">put</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"className\"</span><span class=\"token punctuation\">,</span> joinPoint<span class=\"token punctuation\">.</span><span class=\"token function\">getSignature</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">getDeclaringTypeName</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    logParam<span class=\"token punctuation\">.</span><span class=\"token function\">put</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"methodName\"</span><span class=\"token punctuation\">,</span> joinPoint<span class=\"token punctuation\">.</span><span class=\"token function\">getSignature</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">getName</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    logParam<span class=\"token punctuation\">.</span><span class=\"token function\">put</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"result\"</span><span class=\"token punctuation\">,</span> result<span class=\"token punctuation\">.</span><span class=\"token function\">toString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">// 배치 로그 저장</span>\n    logService<span class=\"token punctuation\">.</span><span class=\"token function\">insertLog</span><span class=\"token punctuation\">(</span>param<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">return</span> result<span class=\"token punctuation\">;</span>\n\n<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n</li>\n</ol>\n<h4 id=\"Custom-Annotation-사용\" style=\"position:relative;\"><a href=\"#Custom-Annotation-%EC%82%AC%EC%9A%A9\" aria-label=\"Custom Annotation 사용 permalink\" class=\"heading-anchor before\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"15\" height=\"15\" viewBox=\"0 0 24 24\"><path d=\"M6.188 8.719c.439-.439.926-.801 1.444-1.087 2.887-1.591 6.589-.745 8.445 2.069l-2.246 2.245c-.644-1.469-2.243-2.305-3.834-1.949-.599.134-1.168.433-1.633.898l-4.304 4.306c-1.307 1.307-1.307 3.433 0 4.74 1.307 1.307 3.433 1.307 4.74 0l1.327-1.327c1.207.479 2.501.67 3.779.575l-2.929 2.929c-2.511 2.511-6.582 2.511-9.093 0s-2.511-6.582 0-9.093l4.304-4.306zm6.836-6.836l-2.929 2.929c1.277-.096 2.572.096 3.779.574l1.326-1.326c1.307-1.307 3.433-1.307 4.74 0 1.307 1.307 1.307 3.433 0 4.74l-4.305 4.305c-1.311 1.311-3.44 1.3-4.74 0-.303-.303-.564-.68-.727-1.051l-2.246 2.245c.236.358.481.667.796.982.812.812 1.846 1.417 3.036 1.704 1.542.371 3.194.166 4.613-.617.518-.286 1.005-.648 1.444-1.087l4.304-4.305c2.512-2.511 2.512-6.582.001-9.093-2.511-2.51-6.581-2.51-9.092 0z\"/></svg></a><strong><em>Custom Annotation 사용</em></strong></h4>\n<blockquote>\n<p>☑️ <em>@CustomScheduled</em>를 사용하면 로그 관련 처리는 AOP에서 하고 있기 때문에 메소드에는 비즈니스 로직 수행 및 결과 반환에 대한 소스만 작성되어 있다. </p>\n</blockquote>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token annotation punctuation\">@Component</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">ScheduledComponent</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token annotation punctuation\">@CustomScheduled</span><span class=\"token punctuation\">(</span>cron<span class=\"token operator\">=</span> <span class=\"token string\">\"0 0 0 * * *\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">public</span> <span class=\"token class-name\">Map</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">Object</span><span class=\"token punctuation\">></span></span> <span class=\"token function\">scheduled1</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\n        <span class=\"token keyword\">return</span> result<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token annotation punctuation\">@CustomScheduled</span><span class=\"token punctuation\">(</span>cron<span class=\"token operator\">=</span> <span class=\"token string\">\"0 0 1 * * *\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">public</span> <span class=\"token class-name\">Map</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">Object</span><span class=\"token punctuation\">></span></span> <span class=\"token function\">scheduled2</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\n        <span class=\"token keyword\">return</span> result<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h2 id=\"\" style=\"position:relative;\"><a href=\"#\" aria-label=\" permalink\" class=\"heading-anchor before\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"15\" height=\"15\" viewBox=\"0 0 24 24\"><path d=\"M6.188 8.719c.439-.439.926-.801 1.444-1.087 2.887-1.591 6.589-.745 8.445 2.069l-2.246 2.245c-.644-1.469-2.243-2.305-3.834-1.949-.599.134-1.168.433-1.633.898l-4.304 4.306c-1.307 1.307-1.307 3.433 0 4.74 1.307 1.307 3.433 1.307 4.74 0l1.327-1.327c1.207.479 2.501.67 3.779.575l-2.929 2.929c-2.511 2.511-6.582 2.511-9.093 0s-2.511-6.582 0-9.093l4.304-4.306zm6.836-6.836l-2.929 2.929c1.277-.096 2.572.096 3.779.574l1.326-1.326c1.307-1.307 3.433-1.307 4.74 0 1.307 1.307 1.307 3.433 0 4.74l-4.305 4.305c-1.311 1.311-3.44 1.3-4.74 0-.303-.303-.564-.68-.727-1.051l-2.246 2.245c.236.358.481.667.796.982.812.812 1.846 1.417 3.036 1.704 1.542.371 3.194.166 4.613-.617.518-.286 1.005-.648 1.444-1.087l4.304-4.305c2.512-2.511 2.512-6.582.001-9.093-2.511-2.51-6.581-2.51-9.092 0z\"/></svg></a>👋</h2>","frontmatter":{"title":"Spring Custom Annotation 만들기 (Feat. AOP)","date":"January 20, 2025","update":"January 20, 2025","tags":["spring","springboot","aop"],"series":null,"emoji":"🌱"},"fields":{"slug":"/spring-custom-annotation/","readingTime":{"minutes":3.1}}},"seriesList":{"edges":[{"node":{"id":"f64e3748-a006-5dbe-a601-023187bb5f60","fields":{"slug":"/intellij-vo-mybatis-xml/"},"frontmatter":{"title":"VO 및 Mybatis XML 자동 생성하기 (with. IntelliJ)","emoji":"🚘"}}},{"node":{"id":"30ae48a8-6973-54a6-a8c6-c43df2ca6279","fields":{"slug":"/linux-swap-memory/"},"frontmatter":{"title":"리눅스 Swap memory 할당/해제","emoji":"💿"}}},{"node":{"id":"d1f0f9d6-5027-5e4b-b289-a929e205d20b","fields":{"slug":"/amazon-linux-nexus-install/"},"frontmatter":{"title":"Amazon Linux에 Nexus 설치하기","emoji":"🔗"}}},{"node":{"id":"c342f8aa-ebb9-5e04-9dd3-815970e4e7f9","fields":{"slug":"/nexus-connect-aws-s3/"},"frontmatter":{"title":"Nexus에 AWS S3 연결하기 (Blob Stores)","emoji":"🪣"}}},{"node":{"id":"8f9df21d-60be-5635-b3ce-2f1574b65dd1","fields":{"slug":"/amazon-linux-sonarqube-install/"},"frontmatter":{"title":"Amazon Linux SonarQube 설치","emoji":"🔎"}}},{"node":{"id":"732ce071-bdc0-5690-a597-a6437e028c1e","fields":{"slug":"/docker-root-directory-change/"},"frontmatter":{"title":"Docker Root Directory 변경","emoji":"🐳"}}},{"node":{"id":"fd5d1b4a-4a98-5719-8048-0b25722827f3","fields":{"slug":"/amazon-linux-jenkins-install/"},"frontmatter":{"title":"Amazon Linux에 Jenkins 설치하기","emoji":"🏗️"}}},{"node":{"id":"1f1f59cb-3de1-54a6-9de8-7637f5437028","fields":{"slug":"/jenkins-agent-node-ssh/"},"frontmatter":{"title":"Jenkins Agent Node 설정하기","emoji":"🤖"}}},{"node":{"id":"4e2279dc-9a69-5fbd-8a0a-d183e7b21c64","fields":{"slug":"/amazon-linux-postgresql-17-install/"},"frontmatter":{"title":"Amazon Linux에 PostgreSQL 수동 설치","emoji":"🗄️"}}},{"node":{"id":"c50ec455-5ac1-5434-925b-bb7085155bc3","fields":{"slug":"/postgresql-session-kill/"},"frontmatter":{"title":"PostgreSQL 세션 정보 확인 및 종료","emoji":"💣"}}},{"node":{"id":"ca4f63fe-80c4-5995-b1c8-bea3891cc725","fields":{"slug":"/react-error-slider-cannot-be-used-as-a-jsx-component/"},"frontmatter":{"title":"ERROR. 'Slider' cannot be used as a JSX component.","emoji":"️🌋"}}},{"node":{"id":"4c6337d3-927c-5ba5-a254-3aa7da1b7bf9","fields":{"slug":"/spring-custom-annotation/"},"frontmatter":{"title":"Spring Custom Annotation 만들기 (Feat. AOP)","emoji":"🌱"}}},{"node":{"id":"2acd1eee-b88c-5ee3-94f8-aec2c9e914b8","fields":{"slug":"/amazon-ec2-ebs-encrypt/"},"frontmatter":{"title":"사용중인 Amazon EBS 암호화하기 (EC2에 연결된 상태)","emoji":"🔒"}}},{"node":{"id":"19619cd0-333a-5ea1-957e-f477e4f94f7a","fields":{"slug":"/gitops-workflow/"},"frontmatter":{"title":"GitOps Workflow에 대한 나의 경험","emoji":"🏢"}}},{"node":{"id":"8e121ff5-42a8-5a9c-8f7e-91a549e81c6c","fields":{"slug":"/amazon-linux-rhel-ssh-port/"},"frontmatter":{"title":"리눅스 SSH 포트 변경 (Amazon Linux, RHEL)","emoji":"🔐"}}},{"node":{"id":"dc1095d2-4a18-5f2d-b7ad-4fd48c9a6010","fields":{"slug":"/postgresql-password-policy-credcheck/"},"frontmatter":{"title":"PostgreSQL 패스워드 정책 설정 (CredCheck)","emoji":"📃"}}},{"node":{"id":"119feed9-8e89-55c7-b69f-f22c11e95822","fields":{"slug":"/spring-get-api-list/"},"frontmatter":{"title":"Spring Annotation 값 읽기 (API 전체 목록 조회)","emoji":"📖"}}},{"node":{"id":"7ed8f468-bf31-51b9-a11d-6b290ecaa1ba","fields":{"slug":"/spring-jwt-aop-log-null-error/"},"frontmatter":{"title":"Spring AOP + JWT logger is null 수정","emoji":"🧨"}}}]},"previous":{"fields":{"slug":"/react-error-slider-cannot-be-used-as-a-jsx-component/"},"frontmatter":{"title":"ERROR. 'Slider' cannot be used as a JSX component."}},"next":{"fields":{"slug":"/presigned-url-s3-upload-springboot/"},"frontmatter":{"title":"SpringBoot에서 S3 Presigned URL 발급받기","emoji":"🔐"}}},"pageContext":{"id":"4c6337d3-927c-5ba5-a254-3aa7da1b7bf9","series":null,"previousPostId":"ca4f63fe-80c4-5995-b1c8-bea3891cc725","nextPostId":"e30a2814-63fc-5034-a11c-daf605fd9c24"}},"staticQueryHashes":[],"slicesMap":{}}