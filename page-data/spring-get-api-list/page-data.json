{"componentChunkName":"component---src-templates-post-jsx","path":"/spring-get-api-list/","result":{"data":{"site":{"siteMetadata":{"title":"RUN:DEVEL:RUN"}},"markdownRemark":{"id":"5242d0e2-3ef1-5e80-8890-8f540e9b83dc","excerpt":"☀️ 테스트 환경 OpenJDK 17.0.2 Gradle 8.0.2 Spring Boot 3.0.5 ✋ 들어가며 API 권한 관리 화면을 만들기 위해서 전체 API의 전체 목록을 조회해야 하는 상황이 생겨버렸다.\n첫번째로 생각했던 방법은 프로젝트에 설정되어있는 스웨거 화면을 크롤링하는 것이었는데 스웨거가 없는 환경에서도 언젠가 활용할지도 모른다는 생각에 이…","html":"<h2 id=\"️-테스트-환경\" style=\"position:relative;\"><a href=\"#%EF%B8%8F-%ED%85%8C%EC%8A%A4%ED%8A%B8-%ED%99%98%EA%B2%BD\" aria-label=\"️ 테스트 환경 permalink\" class=\"heading-anchor before\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"15\" height=\"15\" viewBox=\"0 0 24 24\"><path d=\"M6.188 8.719c.439-.439.926-.801 1.444-1.087 2.887-1.591 6.589-.745 8.445 2.069l-2.246 2.245c-.644-1.469-2.243-2.305-3.834-1.949-.599.134-1.168.433-1.633.898l-4.304 4.306c-1.307 1.307-1.307 3.433 0 4.74 1.307 1.307 3.433 1.307 4.74 0l1.327-1.327c1.207.479 2.501.67 3.779.575l-2.929 2.929c-2.511 2.511-6.582 2.511-9.093 0s-2.511-6.582 0-9.093l4.304-4.306zm6.836-6.836l-2.929 2.929c1.277-.096 2.572.096 3.779.574l1.326-1.326c1.307-1.307 3.433-1.307 4.74 0 1.307 1.307 1.307 3.433 0 4.74l-4.305 4.305c-1.311 1.311-3.44 1.3-4.74 0-.303-.303-.564-.68-.727-1.051l-2.246 2.245c.236.358.481.667.796.982.812.812 1.846 1.417 3.036 1.704 1.542.371 3.194.166 4.613-.617.518-.286 1.005-.648 1.444-1.087l4.304-4.305c2.512-2.511 2.512-6.582.001-9.093-2.511-2.51-6.581-2.51-9.092 0z\"/></svg></a>☀️ 테스트 환경</h2>\n<blockquote>\n<ul>\n<li>OpenJDK 17.0.2</li>\n<li>Gradle 8.0.2</li>\n<li>Spring Boot 3.0.5</li>\n</ul>\n</blockquote>\n<h2 id=\"-들어가며\" style=\"position:relative;\"><a href=\"#-%EB%93%A4%EC%96%B4%EA%B0%80%EB%A9%B0\" aria-label=\" 들어가며 permalink\" class=\"heading-anchor before\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"15\" height=\"15\" viewBox=\"0 0 24 24\"><path d=\"M6.188 8.719c.439-.439.926-.801 1.444-1.087 2.887-1.591 6.589-.745 8.445 2.069l-2.246 2.245c-.644-1.469-2.243-2.305-3.834-1.949-.599.134-1.168.433-1.633.898l-4.304 4.306c-1.307 1.307-1.307 3.433 0 4.74 1.307 1.307 3.433 1.307 4.74 0l1.327-1.327c1.207.479 2.501.67 3.779.575l-2.929 2.929c-2.511 2.511-6.582 2.511-9.093 0s-2.511-6.582 0-9.093l4.304-4.306zm6.836-6.836l-2.929 2.929c1.277-.096 2.572.096 3.779.574l1.326-1.326c1.307-1.307 3.433-1.307 4.74 0 1.307 1.307 1.307 3.433 0 4.74l-4.305 4.305c-1.311 1.311-3.44 1.3-4.74 0-.303-.303-.564-.68-.727-1.051l-2.246 2.245c.236.358.481.667.796.982.812.812 1.846 1.417 3.036 1.704 1.542.371 3.194.166 4.613-.617.518-.286 1.005-.648 1.444-1.087l4.304-4.305c2.512-2.511 2.512-6.582.001-9.093-2.511-2.51-6.581-2.51-9.092 0z\"/></svg></a>✋ 들어가며</h2>\n<p>API 권한 관리 화면을 만들기 위해서 전체 API의 전체 목록을 조회해야 하는 상황이 생겨버렸다.\n첫번째로 생각했던 방법은 프로젝트에 설정되어있는 스웨거 화면을 크롤링하는 것이었는데 스웨거가 없는 환경에서도 언젠가 활용할지도 모른다는 생각에 이 포스팅의 목적인 두번째 아이디어를 실행하긱로 했다.</p>\n<h2 id=\"-아이디어\" style=\"position:relative;\"><a href=\"#-%EC%95%84%EC%9D%B4%EB%94%94%EC%96%B4\" aria-label=\" 아이디어 permalink\" class=\"heading-anchor before\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"15\" height=\"15\" viewBox=\"0 0 24 24\"><path d=\"M6.188 8.719c.439-.439.926-.801 1.444-1.087 2.887-1.591 6.589-.745 8.445 2.069l-2.246 2.245c-.644-1.469-2.243-2.305-3.834-1.949-.599.134-1.168.433-1.633.898l-4.304 4.306c-1.307 1.307-1.307 3.433 0 4.74 1.307 1.307 3.433 1.307 4.74 0l1.327-1.327c1.207.479 2.501.67 3.779.575l-2.929 2.929c-2.511 2.511-6.582 2.511-9.093 0s-2.511-6.582 0-9.093l4.304-4.306zm6.836-6.836l-2.929 2.929c1.277-.096 2.572.096 3.779.574l1.326-1.326c1.307-1.307 3.433-1.307 4.74 0 1.307 1.307 1.307 3.433 0 4.74l-4.305 4.305c-1.311 1.311-3.44 1.3-4.74 0-.303-.303-.564-.68-.727-1.051l-2.246 2.245c.236.358.481.667.796.982.812.812 1.846 1.417 3.036 1.704 1.542.371 3.194.166 4.613-.617.518-.286 1.005-.648 1.444-1.087l4.304-4.305c2.512-2.511 2.512-6.582.001-9.093-2.511-2.51-6.581-2.51-9.092 0z\"/></svg></a>💡 아이디어</h2>\n<h4 id=\"API가-구성된-패턴\" style=\"position:relative;\"><a href=\"#API%EA%B0%80-%EA%B5%AC%EC%84%B1%EB%90%9C-%ED%8C%A8%ED%84%B4\" aria-label=\"API가 구성된 패턴 permalink\" class=\"heading-anchor before\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"15\" height=\"15\" viewBox=\"0 0 24 24\"><path d=\"M6.188 8.719c.439-.439.926-.801 1.444-1.087 2.887-1.591 6.589-.745 8.445 2.069l-2.246 2.245c-.644-1.469-2.243-2.305-3.834-1.949-.599.134-1.168.433-1.633.898l-4.304 4.306c-1.307 1.307-1.307 3.433 0 4.74 1.307 1.307 3.433 1.307 4.74 0l1.327-1.327c1.207.479 2.501.67 3.779.575l-2.929 2.929c-2.511 2.511-6.582 2.511-9.093 0s-2.511-6.582 0-9.093l4.304-4.306zm6.836-6.836l-2.929 2.929c1.277-.096 2.572.096 3.779.574l1.326-1.326c1.307-1.307 3.433-1.307 4.74 0 1.307 1.307 1.307 3.433 0 4.74l-4.305 4.305c-1.311 1.311-3.44 1.3-4.74 0-.303-.303-.564-.68-.727-1.051l-2.246 2.245c.236.358.481.667.796.982.812.812 1.846 1.417 3.036 1.704 1.542.371 3.194.166 4.613-.617.518-.286 1.005-.648 1.444-1.087l4.304-4.305c2.512-2.511 2.512-6.582.001-9.093-2.511-2.51-6.581-2.51-9.092 0z\"/></svg></a><strong><em>API가 구성된 패턴</em></strong></h4>\n<p>내가 뽑아와야할 API는 주소와 메소드를 확인할 수 있도록 아래와 같은 형태로 구성이 되어있다.</p>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token annotation punctuation\">@RequestMapping</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/api\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">SampleController</span> <span class=\"token punctuation\">{</span>\n   <span class=\"token annotation punctuation\">@GetMapping</span><span class=\"token punctuation\">(</span>value <span class=\"token operator\">=</span> <span class=\"token string\">\"/v1/get\"</span><span class=\"token punctuation\">,</span> produces <span class=\"token operator\">=</span> <span class=\"token class-name\">MediaType</span><span class=\"token punctuation\">.</span><span class=\"token constant\">APPLICATION_JSON_VALUE</span><span class=\"token punctuation\">)</span>\n   <span class=\"token keyword\">public</span> <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span>\n    \n   <span class=\"token annotation punctuation\">@PostMapping</span><span class=\"token punctuation\">(</span>value <span class=\"token operator\">=</span> <span class=\"token string\">\"/v1/post\"</span><span class=\"token punctuation\">,</span> produces <span class=\"token operator\">=</span> <span class=\"token class-name\">MediaType</span><span class=\"token punctuation\">.</span><span class=\"token constant\">APPLICATION_JSON_VALUE</span><span class=\"token punctuation\">)</span>\n   <span class=\"token keyword\">public</span> <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span>\n   \n   <span class=\"token annotation punctuation\">@PutMapping</span><span class=\"token punctuation\">(</span>value <span class=\"token operator\">=</span> <span class=\"token string\">\"/v1/put\"</span><span class=\"token punctuation\">,</span> produces <span class=\"token operator\">=</span> <span class=\"token class-name\">MediaType</span><span class=\"token punctuation\">.</span><span class=\"token constant\">APPLICATION_JSON_VALUE</span><span class=\"token punctuation\">)</span>\n   <span class=\"token keyword\">public</span> <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span>\n    \n   <span class=\"token annotation punctuation\">@DeleteMapping</span><span class=\"token punctuation\">(</span>value <span class=\"token operator\">=</span> <span class=\"token string\">\"/v1/delete\"</span><span class=\"token punctuation\">,</span> produces <span class=\"token operator\">=</span> <span class=\"token class-name\">MediaType</span><span class=\"token punctuation\">.</span><span class=\"token constant\">APPLICATION_JSON_VALUE</span><span class=\"token punctuation\">)</span>\n   <span class=\"token keyword\">public</span> <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h4 id=\"만들어내고-싶은-데이터의-모습\" style=\"position:relative;\"><a href=\"#%EB%A7%8C%EB%93%A4%EC%96%B4%EB%82%B4%EA%B3%A0-%EC%8B%B6%EC%9D%80-%EB%8D%B0%EC%9D%B4%ED%84%B0%EC%9D%98-%EB%AA%A8%EC%8A%B5\" aria-label=\"만들어내고 싶은 데이터의 모습 permalink\" class=\"heading-anchor before\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"15\" height=\"15\" viewBox=\"0 0 24 24\"><path d=\"M6.188 8.719c.439-.439.926-.801 1.444-1.087 2.887-1.591 6.589-.745 8.445 2.069l-2.246 2.245c-.644-1.469-2.243-2.305-3.834-1.949-.599.134-1.168.433-1.633.898l-4.304 4.306c-1.307 1.307-1.307 3.433 0 4.74 1.307 1.307 3.433 1.307 4.74 0l1.327-1.327c1.207.479 2.501.67 3.779.575l-2.929 2.929c-2.511 2.511-6.582 2.511-9.093 0s-2.511-6.582 0-9.093l4.304-4.306zm6.836-6.836l-2.929 2.929c1.277-.096 2.572.096 3.779.574l1.326-1.326c1.307-1.307 3.433-1.307 4.74 0 1.307 1.307 1.307 3.433 0 4.74l-4.305 4.305c-1.311 1.311-3.44 1.3-4.74 0-.303-.303-.564-.68-.727-1.051l-2.246 2.245c.236.358.481.667.796.982.812.812 1.846 1.417 3.036 1.704 1.542.371 3.194.166 4.613-.617.518-.286 1.005-.648 1.444-1.087l4.304-4.305c2.512-2.511 2.512-6.582.001-9.093-2.511-2.51-6.581-2.51-9.092 0z\"/></svg></a><strong><em>만들어내고 싶은 데이터의 모습</em></strong></h4>\n<table>\n<thead>\n<tr>\n<th>className</th>\n<th>apiUrl</th>\n<th>httpMethod</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>com.sample.SampleController</td>\n<td>/api/vi/get</td>\n<td>GET</td>\n</tr>\n<tr>\n<td>com.sample.SampleController</td>\n<td>/api/vi/post</td>\n<td>POST</td>\n</tr>\n<tr>\n<td>com.sample.SampleController</td>\n<td>/api/vi/delete</td>\n<td>DELETE</td>\n</tr>\n<tr>\n<td>com.sample.SampleController</td>\n<td>/api/vi/put</td>\n<td>PUT</td>\n</tr>\n</tbody>\n</table>\n<h4 id=\"그래서-어떻게-만들건데\" style=\"position:relative;\"><a href=\"#%EA%B7%B8%EB%9E%98%EC%84%9C-%EC%96%B4%EB%96%BB%EA%B2%8C-%EB%A7%8C%EB%93%A4%EA%B1%B4%EB%8D%B0\" aria-label=\"그래서 어떻게 만들건데 permalink\" class=\"heading-anchor before\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"15\" height=\"15\" viewBox=\"0 0 24 24\"><path d=\"M6.188 8.719c.439-.439.926-.801 1.444-1.087 2.887-1.591 6.589-.745 8.445 2.069l-2.246 2.245c-.644-1.469-2.243-2.305-3.834-1.949-.599.134-1.168.433-1.633.898l-4.304 4.306c-1.307 1.307-1.307 3.433 0 4.74 1.307 1.307 3.433 1.307 4.74 0l1.327-1.327c1.207.479 2.501.67 3.779.575l-2.929 2.929c-2.511 2.511-6.582 2.511-9.093 0s-2.511-6.582 0-9.093l4.304-4.306zm6.836-6.836l-2.929 2.929c1.277-.096 2.572.096 3.779.574l1.326-1.326c1.307-1.307 3.433-1.307 4.74 0 1.307 1.307 1.307 3.433 0 4.74l-4.305 4.305c-1.311 1.311-3.44 1.3-4.74 0-.303-.303-.564-.68-.727-1.051l-2.246 2.245c.236.358.481.667.796.982.812.812 1.846 1.417 3.036 1.704 1.542.371 3.194.166 4.613-.617.518-.286 1.005-.648 1.444-1.087l4.304-4.305c2.512-2.511 2.512-6.582.001-9.093-2.511-2.51-6.581-2.51-9.092 0z\"/></svg></a><strong><em>그래서 어떻게 만들건데?</em></strong></h4>\n<p>패키지내 모든 클래스와 메소드를 순회하면서\n<code class=\"language-text\">@RequestMapping</code>, <code class=\"language-text\">@GetMapping</code>, <code class=\"language-text\">@PostMapping</code>, <code class=\"language-text\">@DeleteMapping</code>, <code class=\"language-text\">@PutMapping</code>에 포함된 값을 읽어오는 클래스를 만들어보자</p>\n<h2 id=\"-실현된-아이디어\" style=\"position:relative;\"><a href=\"#-%EC%8B%A4%ED%98%84%EB%90%9C-%EC%95%84%EC%9D%B4%EB%94%94%EC%96%B4\" aria-label=\" 실현된 아이디어 permalink\" class=\"heading-anchor before\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"15\" height=\"15\" viewBox=\"0 0 24 24\"><path d=\"M6.188 8.719c.439-.439.926-.801 1.444-1.087 2.887-1.591 6.589-.745 8.445 2.069l-2.246 2.245c-.644-1.469-2.243-2.305-3.834-1.949-.599.134-1.168.433-1.633.898l-4.304 4.306c-1.307 1.307-1.307 3.433 0 4.74 1.307 1.307 3.433 1.307 4.74 0l1.327-1.327c1.207.479 2.501.67 3.779.575l-2.929 2.929c-2.511 2.511-6.582 2.511-9.093 0s-2.511-6.582 0-9.093l4.304-4.306zm6.836-6.836l-2.929 2.929c1.277-.096 2.572.096 3.779.574l1.326-1.326c1.307-1.307 3.433-1.307 4.74 0 1.307 1.307 1.307 3.433 0 4.74l-4.305 4.305c-1.311 1.311-3.44 1.3-4.74 0-.303-.303-.564-.68-.727-1.051l-2.246 2.245c.236.358.481.667.796.982.812.812 1.846 1.417 3.036 1.704 1.542.371 3.194.166 4.613-.617.518-.286 1.005-.648 1.444-1.087l4.304-4.305c2.512-2.511 2.512-6.582.001-9.093-2.511-2.51-6.581-2.51-9.092 0z\"/></svg></a>💿 실현된 아이디어</h2>\n<p>설명을 좀 해보려고 했는데 <code class=\"language-text\">com.sample</code> 패키지 내 모든 컨트롤러 또 컨트롤러 하위에 있는 메소드들을 모두 스캔하면서\nAnnotation의 값을 읽어오는게 전부라 별로 할말이 없다.</p>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token keyword\">package</span> <span class=\"token namespace\">com<span class=\"token punctuation\">.</span>sample</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">io<span class=\"token punctuation\">.</span>swagger<span class=\"token punctuation\">.</span>v3<span class=\"token punctuation\">.</span>oas<span class=\"token punctuation\">.</span>annotations<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Operation</span></span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>beans<span class=\"token punctuation\">.</span>factory<span class=\"token punctuation\">.</span>config<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">BeanDefinition</span></span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>context<span class=\"token punctuation\">.</span>annotation<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">ClassPathScanningCandidateComponentProvider</span></span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>core<span class=\"token punctuation\">.</span>type<span class=\"token punctuation\">.</span>filter<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">AnnotationTypeFilter</span></span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>stereotype<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Controller</span></span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">ClassUtils</span></span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>web<span class=\"token punctuation\">.</span>bind<span class=\"token punctuation\">.</span>annotation<span class=\"token punctuation\">.</span></span><span class=\"token operator\">*</span></span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">java<span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Set</span></span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">APIFinder</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token class-name\">ClassPathScanningCandidateComponentProvider</span> provider <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ClassPathScanningCandidateComponentProvider</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        provider<span class=\"token punctuation\">.</span><span class=\"token function\">addIncludeFilter</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">AnnotationTypeFilter</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Controller</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token class-name\">Set</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">BeanDefinition</span><span class=\"token punctuation\">></span></span> controllerBeans <span class=\"token operator\">=</span> provider<span class=\"token punctuation\">.</span><span class=\"token function\">findCandidateComponents</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"com.sample\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">BeanDefinition</span> beanDefinition <span class=\"token operator\">:</span> controllerBeans<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token class-name\">String</span> className <span class=\"token operator\">=</span> beanDefinition<span class=\"token punctuation\">.</span><span class=\"token function\">getBeanClassName</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token class-name\">Class</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token operator\">?</span><span class=\"token punctuation\">></span></span> clazz <span class=\"token operator\">=</span> <span class=\"token class-name\">ClassUtils</span><span class=\"token punctuation\">.</span><span class=\"token function\">resolveClassName</span><span class=\"token punctuation\">(</span>className<span class=\"token punctuation\">,</span> <span class=\"token class-name\">ClassUtils</span><span class=\"token punctuation\">.</span><span class=\"token function\">getDefaultClassLoader</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n            <span class=\"token class-name\">RequestMapping</span> requestMapping <span class=\"token operator\">=</span> clazz<span class=\"token punctuation\">.</span><span class=\"token function\">getAnnotation</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">RequestMapping</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token class-name\">String</span> prefix <span class=\"token operator\">=</span> requestMapping<span class=\"token punctuation\">.</span><span class=\"token function\">value</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\n            <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\"><span class=\"token namespace\">java<span class=\"token punctuation\">.</span>lang<span class=\"token punctuation\">.</span>reflect<span class=\"token punctuation\">.</span></span>Method</span> method <span class=\"token operator\">:</span> clazz<span class=\"token punctuation\">.</span><span class=\"token function\">getMethods</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                <span class=\"token class-name\">GetMapping</span> getMapping <span class=\"token operator\">=</span> method<span class=\"token punctuation\">.</span><span class=\"token function\">getAnnotation</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">GetMapping</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                <span class=\"token class-name\">PostMapping</span> postMapping <span class=\"token operator\">=</span> method<span class=\"token punctuation\">.</span><span class=\"token function\">getAnnotation</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">PostMapping</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                <span class=\"token class-name\">PutMapping</span> putMapping <span class=\"token operator\">=</span> method<span class=\"token punctuation\">.</span><span class=\"token function\">getAnnotation</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">PutMapping</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                <span class=\"token class-name\">DeleteMapping</span> deleteMapping <span class=\"token operator\">=</span> method<span class=\"token punctuation\">.</span><span class=\"token function\">getAnnotation</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">DeleteMapping</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n                <span class=\"token class-name\">String</span> mapping <span class=\"token operator\">=</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">;</span>\n                <span class=\"token class-name\">String</span> methodStr <span class=\"token operator\">=</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">;</span>\n                \n                <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>getMapping <span class=\"token operator\">!=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n                    methodStr <span class=\"token operator\">=</span> <span class=\"token string\">\"GET\"</span><span class=\"token punctuation\">;</span>\n                    <span class=\"token class-name\">String</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> arr <span class=\"token operator\">=</span> method<span class=\"token punctuation\">.</span><span class=\"token function\">getAnnotation</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">GetMapping</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">value</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>arr<span class=\"token punctuation\">.</span>length <span class=\"token operator\">!=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n                        mapping <span class=\"token operator\">=</span> arr<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n                    <span class=\"token punctuation\">}</span>\n                <span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>postMapping <span class=\"token operator\">!=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n                    methodStr <span class=\"token operator\">=</span> <span class=\"token string\">\"POST\"</span><span class=\"token punctuation\">;</span>\n                    <span class=\"token class-name\">String</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> arr <span class=\"token operator\">=</span> method<span class=\"token punctuation\">.</span><span class=\"token function\">getAnnotation</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">PostMapping</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">value</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>arr<span class=\"token punctuation\">.</span>length <span class=\"token operator\">!=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n                        mapping <span class=\"token operator\">=</span> arr<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n                    <span class=\"token punctuation\">}</span>\n                <span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>putMapping <span class=\"token operator\">!=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n                    methodStr <span class=\"token operator\">=</span> <span class=\"token string\">\"PUT\"</span><span class=\"token punctuation\">;</span>\n                    <span class=\"token class-name\">String</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> arr <span class=\"token operator\">=</span> method<span class=\"token punctuation\">.</span><span class=\"token function\">getAnnotation</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">PutMapping</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">value</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>arr<span class=\"token punctuation\">.</span>length <span class=\"token operator\">!=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n                        mapping <span class=\"token operator\">=</span> arr<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n                    <span class=\"token punctuation\">}</span>\n                <span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>deleteMapping <span class=\"token operator\">!=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n                    methodStr <span class=\"token operator\">=</span> <span class=\"token string\">\"DELETE\"</span><span class=\"token punctuation\">;</span>\n                    <span class=\"token class-name\">String</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> arr <span class=\"token operator\">=</span> method<span class=\"token punctuation\">.</span><span class=\"token function\">getAnnotation</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">DeleteMapping</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">value</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>arr<span class=\"token punctuation\">.</span>length <span class=\"token operator\">!=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n                        mapping <span class=\"token operator\">=</span> arr<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n                    <span class=\"token punctuation\">}</span>\n                <span class=\"token punctuation\">}</span>\n                <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>methodStr<span class=\"token punctuation\">.</span><span class=\"token function\">equals</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n                    <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>className <span class=\"token operator\">+</span> <span class=\"token string\">\"\\t\"</span> <span class=\"token operator\">+</span> prefix <span class=\"token operator\">+</span> mapping <span class=\"token operator\">+</span> <span class=\"token string\">\"\\t\"</span> <span class=\"token operator\">+</span> methodStr<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                <span class=\"token punctuation\">}</span>\n            <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"shell\"><pre class=\"language-shell\"><code class=\"language-shell\">✔\ncom.sample.SampleController   /api/vi/get       GET\ncom.sample.SampleController   /api/vi/post      POST\ncom.sample.SampleController   /api/vi/delete    DELETE\ncom.sample.SampleController   /api/vi/put       PUT</code></pre></div>\n<h2 id=\"-마치며\" style=\"position:relative;\"><a href=\"#-%EB%A7%88%EC%B9%98%EB%A9%B0\" aria-label=\" 마치며 permalink\" class=\"heading-anchor before\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"15\" height=\"15\" viewBox=\"0 0 24 24\"><path d=\"M6.188 8.719c.439-.439.926-.801 1.444-1.087 2.887-1.591 6.589-.745 8.445 2.069l-2.246 2.245c-.644-1.469-2.243-2.305-3.834-1.949-.599.134-1.168.433-1.633.898l-4.304 4.306c-1.307 1.307-1.307 3.433 0 4.74 1.307 1.307 3.433 1.307 4.74 0l1.327-1.327c1.207.479 2.501.67 3.779.575l-2.929 2.929c-2.511 2.511-6.582 2.511-9.093 0s-2.511-6.582 0-9.093l4.304-4.306zm6.836-6.836l-2.929 2.929c1.277-.096 2.572.096 3.779.574l1.326-1.326c1.307-1.307 3.433-1.307 4.74 0 1.307 1.307 1.307 3.433 0 4.74l-4.305 4.305c-1.311 1.311-3.44 1.3-4.74 0-.303-.303-.564-.68-.727-1.051l-2.246 2.245c.236.358.481.667.796.982.812.812 1.846 1.417 3.036 1.704 1.542.371 3.194.166 4.613-.617.518-.286 1.005-.648 1.444-1.087l4.304-4.305c2.512-2.511 2.512-6.582.001-9.093-2.511-2.51-6.581-2.51-9.092 0z\"/></svg></a>👋 마치며</h2>\n<p>깔끔하게 짜여진 소스는 아니지만 언젠가 필요할지도 모르겠다.</p>","frontmatter":{"title":"Spring Annotation 값 읽기 (API 전체 목록 조회)","date":"April 03, 2025","update":"April 03, 2025","tags":["spring","springboot","annotation"],"series":null,"emoji":"📖"},"fields":{"slug":"/spring-get-api-list/","readingTime":{"minutes":3.255}}},"seriesList":{"edges":[{"node":{"id":"8b11ff3d-4df1-5a62-a319-1fb705954eea","fields":{"slug":"/intellij-vo-mybatis-xml/"},"frontmatter":{"title":"VO 및 Mybatis XML 자동 생성하기 (with. IntelliJ)","emoji":"🚘"}}},{"node":{"id":"350d0abc-ac8e-5c73-9eb9-5ae24239f4f3","fields":{"slug":"/linux-swap-memory/"},"frontmatter":{"title":"리눅스 Swap memory 할당/해제","emoji":"💿"}}},{"node":{"id":"ae57999d-3974-5c6f-a7a3-54d1240ed0ff","fields":{"slug":"/amazon-linux-nexus-install/"},"frontmatter":{"title":"Amazon Linux에 Nexus 설치하기","emoji":"🔗"}}},{"node":{"id":"c1cbae97-f2ed-581c-a487-b1ff3a7d5d99","fields":{"slug":"/nexus-connect-aws-s3/"},"frontmatter":{"title":"Nexus에 AWS S3 연결하기 (Blob Stores)","emoji":"🪣"}}},{"node":{"id":"0a46576f-f124-5929-b47b-138021388955","fields":{"slug":"/amazon-linux-sonarqube-install/"},"frontmatter":{"title":"Amazon Linux SonarQube 설치","emoji":"🔎"}}},{"node":{"id":"1e34269e-a65f-5c56-8e67-08dab8639cf7","fields":{"slug":"/docker-root-directory-change/"},"frontmatter":{"title":"Docker Root Directory 변경","emoji":"🐳"}}},{"node":{"id":"62d9ae8d-b558-5e49-bd31-d837a51ed32d","fields":{"slug":"/amazon-linux-jenkins-install/"},"frontmatter":{"title":"Amazon Linux에 Jenkins 설치하기","emoji":"🏗️"}}},{"node":{"id":"eac06354-a592-50dc-91c0-0214612fe572","fields":{"slug":"/jenkins-agent-node-ssh/"},"frontmatter":{"title":"Jenkins Agent Node 설정하기","emoji":"🤖"}}},{"node":{"id":"d1346f25-004a-5f5e-9c83-45cbabaa9ac4","fields":{"slug":"/amazon-linux-postgresql-17-install/"},"frontmatter":{"title":"Amazon Linux에 PostgreSQL 수동 설치","emoji":"🗄️"}}},{"node":{"id":"03c4c422-8846-5a0a-be83-2db3027a31cc","fields":{"slug":"/postgresql-session-kill/"},"frontmatter":{"title":"PostgreSQL 세션 정보 확인 및 종료","emoji":"💣"}}},{"node":{"id":"2d70c9b1-2a23-5034-b5d2-34bb500fc776","fields":{"slug":"/react-error-slider-cannot-be-used-as-a-jsx-component/"},"frontmatter":{"title":"ERROR. 'Slider' cannot be used as a JSX component.","emoji":"️🌋"}}},{"node":{"id":"762a3754-020a-5d44-9fec-a26f4b486d26","fields":{"slug":"/spring-custom-annotation/"},"frontmatter":{"title":"Spring Custom Annotation 만들기 (Feat. AOP)","emoji":"🌱"}}},{"node":{"id":"f87367dc-4673-573b-b2c9-571fdd990f43","fields":{"slug":"/amazon-ec2-ebs-encrypt/"},"frontmatter":{"title":"사용중인 Amazon EBS 암호화하기 (EC2에 연결된 상태)","emoji":"🔒"}}},{"node":{"id":"d56c011b-b66c-541b-b851-7423ef84c8cb","fields":{"slug":"/gitops-workflow/"},"frontmatter":{"title":"GitOps Workflow에 대한 나의 경험","emoji":"🏢"}}},{"node":{"id":"b7408a5d-8784-50d0-aa2e-f343a7372fc4","fields":{"slug":"/amazon-linux-rhel-ssh-port/"},"frontmatter":{"title":"리눅스 SSH 포트 변경 (Amazon Linux, RHEL)","emoji":"🔐"}}},{"node":{"id":"a44e344c-28ea-5001-beac-332c89338bfb","fields":{"slug":"/postgresql-password-policy-credcheck/"},"frontmatter":{"title":"PostgreSQL 패스워드 정책 설정 (CredCheck)","emoji":"📃"}}},{"node":{"id":"5242d0e2-3ef1-5e80-8890-8f540e9b83dc","fields":{"slug":"/spring-get-api-list/"},"frontmatter":{"title":"Spring Annotation 값 읽기 (API 전체 목록 조회)","emoji":"📖"}}}]},"previous":{"fields":{"slug":"/postgresql-password-policy-credcheck/"},"frontmatter":{"title":"PostgreSQL 패스워드 정책 설정 (CredCheck)"}},"next":null},"pageContext":{"id":"5242d0e2-3ef1-5e80-8890-8f540e9b83dc","series":null,"previousPostId":"a44e344c-28ea-5001-beac-332c89338bfb","nextPostId":null}},"staticQueryHashes":[],"slicesMap":{}}