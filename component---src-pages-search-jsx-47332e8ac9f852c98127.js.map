{"version":3,"file":"component---src-pages-search-jsx-47332e8ac9f852c98127.js","mappings":"wPAcA,MAAMA,EAAgBC,EAAAA,QAAOC,IAAGC,WAAA,CAAAC,YAAA,wBAAAC,YAAA,eAAVJ,CAAU,+DA4ChC,UArCeK,IAAe,IAAd,KAAEC,GAAMD,EACtB,MAAME,EAAQD,EAAKE,kBAAkBC,OAE/B,EAACC,EAAM,EAACC,IAAYC,EAAAA,EAAAA,UAAS,IAE7BC,GAAgBC,EAAAA,EAAAA,aACpBP,EAAMQ,QAAOC,IACX,MAAM,YAAEC,EAAW,gBAAEC,GAAoBF,GACnC,MAAEG,GAAUF,EACZG,EAAaV,EAAMW,oBAEzB,QAAIH,EAAgBG,oBAAoBC,SAASF,IAE1CD,EAAME,oBAAoBC,SAASF,EAAW,IAEvD,CAACV,IAGH,OACEa,EAAAA,cAACC,EAAAA,EAAM,KACLD,EAAAA,cAACE,EAAAA,EAAG,CAACN,MAAOA,EAAAA,MAAOO,YAAaA,EAAAA,YAAaC,IAAKC,EAAAA,UAClDL,EAAAA,cAACM,EAAAA,EAAa,CAACC,KAAM,KACrBP,EAAAA,cAACxB,EAAa,KACZwB,EAAAA,cAACQ,EAAAA,EAAK,CAACC,aAAcnB,EAAcoB,OAAQC,MAAM,UAAUC,IAAK,GAAIC,UAAU,EACvEC,GAAI,CAACC,IAAI,MAAOC,KAAM,SAE7BhB,EAAAA,cAACiB,EAAAA,EAAS,CACRC,SAAUC,GAAK/B,EAAS+B,EAAEC,OAAOC,OACjCC,YAAY,YAGhBtB,EAAAA,cAACuB,EAAAA,EAAO,MACRvB,EAAAA,cAACwB,EAAAA,EAAQ,CAACC,SAAUnC,IACb,C","sources":["webpack://gatsby-starter-rundevelrun/./src/pages/search.jsx"],"sourcesContent":["import React, { useState, useCallback } from \"react\"\nimport styled from \"styled-components\"\nimport SEO from \"components/SEO\"\nimport { graphql } from \"gatsby\"\n\nimport Layout from \"components/Layout\"\nimport PostList from \"components/PostList\"\nimport TextField from \"components/TextField\"\nimport Badge from '@mui/material/Badge';\nimport VerticalSpace from \"components/VerticalSpace\"\n\nimport { title, description, siteUrl } from \"../../blog-config\"\nimport Divider from \"../components/Divider\"\n\nconst SearchWrapper = styled.div`\n    margin-top: 20px;\n    @media (max-width: 768px) {\n        padding: 0 15px;\n    }\n`\n\nconst Search = ({ data }) => {\n  const posts = data.allMarkdownRemark.nodes\n\n  const [query, setQuery] = useState(\"\")\n\n  const filteredPosts = useCallback(\n    posts.filter(post => {\n      const { frontmatter, rawMarkdownBody } = post\n      const { title } = frontmatter\n      const lowerQuery = query.toLocaleLowerCase()\n\n      if (rawMarkdownBody.toLocaleLowerCase().includes(lowerQuery)) return true\n\n      return title.toLocaleLowerCase().includes(lowerQuery)\n    }),\n    [query]\n  )\n\n  return (\n    <Layout>\n      <SEO title={title} description={description} url={siteUrl} />\n      <VerticalSpace size={10} />\n      <SearchWrapper>\n        <Badge badgeContent={filteredPosts.length} color=\"warning\" max={99} showZero={true}\n               sx={{top:'5px', left: '2px'}}>\n        </Badge>\n        <TextField\n          onChange={e => setQuery(e.target.value)}\n          placeholder=\"Search\"\n        />\n      </SearchWrapper>\n      <Divider />\n      <PostList postList={filteredPosts} />\n    </Layout>\n  )\n}\n\nexport default Search\n\nexport const pageQuery = graphql`\n  query {\n    allMarkdownRemark(\n      sort: { fields: [frontmatter___date], order: DESC }\n      filter: { fileAbsolutePath: { regex: \"/contents/posts/\" } }\n    ) {\n      nodes {\n        excerpt(pruneLength: 200, truncate: true)\n        fields {\n          slug\n        }\n        frontmatter {\n          date(formatString: \"MMMM DD, YYYY\")\n          title\n          tags\n          emoji\n          series\n        }\n        rawMarkdownBody\n      }\n    }\n  }\n`\n"],"names":["SearchWrapper","styled","div","withConfig","displayName","componentId","_ref","data","posts","allMarkdownRemark","nodes","query","setQuery","useState","filteredPosts","useCallback","filter","post","frontmatter","rawMarkdownBody","title","lowerQuery","toLocaleLowerCase","includes","React","Layout","SEO","description","url","siteUrl","VerticalSpace","size","Badge","badgeContent","length","color","max","showZero","sx","top","left","TextField","onChange","e","target","value","placeholder","Divider","PostList","postList"],"sourceRoot":""}